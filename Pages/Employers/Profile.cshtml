@page "/Employers/{employerId}"
@using Microsoft.AspNetCore.Mvc.TagHelpers
@model Pages.Employers.Profile

@{
    ViewData["Title"] = "Employer information";

    var employer = Model.Employer;
}

<div class="d-flex flex-row">
    <div class="d-flex flex-column flex-lg-row" style="flex: 1;">
        <div class="d-flex flex-column flex-lg-row align-items-center mb-5" style="flex: 3;">

            <div class="d-flex justify-content-center" style="flex: 1; max-width: 75%;">
                <img src="@employer.PictureUrl" alt="@employer.Email" class="img-thumbnail rounded-1"
                     style="object-fit: contain;">
            </div>

            <div class="d-flex align-items-center" style="flex: 1;">
                <ul class="list-group list-group-flush">
                    <li class="list-group-item">
                        <h3>@employer.FirstName @employer.LastName</h3>
                    </li>
                    <li class="list-group-item">
                        <h4>@(DateTime.UtcNow.Year - employer.DateOfBirth.Year)</h4>
                    </li>
                    <li class="list-group-item">
                        @if (Model.AverageRating != null)
                        {
                            <div class="Stars" style="--rating: @Model.AverageRating">
                            </div>
                        }
                        else
                        {
                            <p class="text-warning m-0">This employer has no ratings</p>
                        }
                    </li>
                    <li class="list-group-item">
                        @if (employer.IsActive)
                        {
                            <i>Active on this site since @employer.DateOfRegistration.ToString("d")</i>
                        }
                        else
                        {
                            <h4 class="text-">This employer is inactive</h4>
                        }
                    </li>
                </ul>
            </div>
        </div>
        <div style="flex: 1;"></div>
        <div class="d-flex flex-column" style="flex: 3;">
            <div style="flex: 1;">
                <ul class="list-group list-group-flush" style="text-align: center;">
                    <li class="list-group-item">
                        <h5>Employer information</h5>
                    </li>
                    @if (Model.Employer.CompanyName == null)
                    {
                        <li class="list-group-item">
                            <h6 class="text-danger">No company name added</h6>
                        </li>
                    }
                    else
                    {
                        <li class="list-group-item">
                            <div class="d-flex flex-row">
                                <div class="d-flex justify-content-around" style="flex: 1;">
                                    Name
                                </div>
                                <div class="vr">
                                </div>
                                <div class="d-flex justify-content-around" style="flex: 1;">
                                    <b>@Model.Employer.CompanyName.ToUpper()</b>
                                </div>
                            </div>
                        </li>
                    }
                    @if (employer.CompanyState == null)
                    {
                        <li class="list-group-item">
                            <h6 class="text-danger">No company state added</h6>
                        </li>
                    }
                    else
                    {
                        <li class="list-group-item">
                            <div class="d-flex flex-row">
                                <div class="d-flex justify-content-around" style="flex: 1;">
                                    State
                                </div>
                                <div class="vr">
                                </div>
                                <div class="d-flex justify-content-around" style="flex: 1;">
                                    <b>@employer.CompanyState.ToUpper()</b>
                                </div>
                            </div>
                        </li>
                    }
                    @if (employer.CompanyCity == null)
                    {
                        <li class="list-group-item">
                            <h6 class="text-danger">No company city added</h6>
                        </li>
                    }
                    else
                    {
                        <li class="list-group-item">
                            <div class="d-flex flex-row">
                                <div class="d-flex justify-content-around" style="flex: 1;">
                                    City
                                </div>
                                <div class="vr">
                                </div>
                                <div class="d-flex justify-content-around" style="flex: 1;">
                                    <b>@employer.CompanyCity.ToUpper()</b>
                                </div>
                            </div>
                        </li>
                    }
                    @if (employer.CompanyAddress == null)
                    {
                        <li class="list-group-item">
                            <h6 class="text-danger">No company address added</h6>
                        </li>
                    }
                    else
                    {
                        <li class="list-group-item">
                            <div class="d-flex flex-row">
                                <div class="d-flex justify-content-around" style="flex: 1;">
                                    Address
                                </div>
                                <div class="vr">
                                </div>
                                <div class="d-flex justify-content-around" style="flex: 1;">
                                    <b>@employer.CompanyAddress.ToUpper()</b>
                                </div>
                            </div>
                        </li>
                    }
                </ul>
            </div>
            <div style="flex: 1;">

            </div>
            <div style="flex: 1;">
                <ul class="list-group list-group-flush mt-5">
                    <li class="list-group-item" style="text-align: center;">
                        <h5>Personal information</h5>
                    </li>
                    <li class="list-group-item">
                        <div class="d-flex flex-row">
                            <div class="d-flex justify-content-around" style="flex: 1;">
                                State
                            </div>
                            <div class="vr">
                            </div>
                            <div class="d-flex justify-content-around" style="flex: 1;">
                                <b>@employer.State.ToUpper()</b>
                            </div>
                        </div>
                    </li>
                    <li class="list-group-item">
                        <div class="d-flex flex-row">
                            <div class="d-flex justify-content-around" style="flex: 1;">
                                City
                            </div>
                            <div class="vr">
                            </div>
                            <div class="d-flex justify-content-around" style="flex: 1;">
                                <b>@employer.City.ToUpper()</b>
                            </div>
                        </div>
                    </li>
                </ul>
            </div>
        </div>
    </div>
</div>

@if (Model.EmployerRatings != null)
{
    <div class="mt-5 mb-3 ms-2">
        <span class="badge border border-warning text-dark">
            <h4 class="m-0">
                Ratings
            </h4>
        </span>
    </div>
    <div class="row row-cols-1 row-cols-md-2 row-cols-lg-3 row-cols-xl-4 g-4 ms-5 me-5 ms-md-0 me-md-0">
        @foreach (var rating in Model.EmployerRatings)
        {
            <div class="col">
                <div class="card border-dark-blue text-center h-100 w-auto">
                    <div class="card-header bg-white">
                        <h4 class="card-title bg-white m-0">
                            @rating.WorkerDto.FirstName @rating.WorkerDto.LastName.ToUpper()
                        </h4>
                    </div>
                    <div class="card-text bg-white">
                        <div class="Stars" style="--rating: @rating.NumericalRating;">
                        </div>
                    </div>
                    @if (rating.VerbalRating != null)
                    {
                        <div class="card-text bg-white">
                            @rating.VerbalRating
                        </div>
                    }
                    <div class="card-footer bg-white">
                        <a class="btn btn-outline-dark" asp-page="/Workers/Profile"
                           asp-route-workerId="@rating.WorkerDto.Id">See profile</a>
                    </div>
                </div>
            </div>
        }
    </div>
}